/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aplikasimanajemen;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mutia
 */
public class aplikasi extends javax.swing.JFrame {

    /**
     * Creates new form aplikasi
     */
    public aplikasi() {
        initComponents();
        loadKaryawanComboBox();
        loadProyekComboBox();
        loadDataTransaksi();
        
    }
    
public void loadComboBoxes() {
    comboBox_karyawan.removeAllItems();
    comboBox_proyek.removeAllItems();

   try (Connection conn = koneksi.getConnection()) { 
        // Muat data karyawan
        String sqlKaryawan = "SELECT nama FROM tb_karyawan";
        PreparedStatement pstmtKaryawan = conn.prepareStatement(sqlKaryawan);
        ResultSet rsKaryawan = pstmtKaryawan.executeQuery();
        while (rsKaryawan.next()) {
            comboBox_karyawan.addItem(rsKaryawan.getString("nama"));
        }

        // Muat data proyek
        String sqlProyek = "SELECT nama_proyek FROM tb_proyek";
        PreparedStatement pstmtProyek = conn.prepareStatement(sqlProyek);
        ResultSet rsProyek = pstmtProyek.executeQuery();
        while (rsProyek.next()) {
            comboBox_proyek.addItem(rsProyek.getString("nama_proyek"));
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal memuat data ComboBox: " + e.getMessage());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TabbedPane = new javax.swing.JTabbedPane();
        TabKaryawan = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        tambah_karyawan = new javax.swing.JButton();
        edit_karyawan = new javax.swing.JButton();
        hapus_karyawan = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_karyawan = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        id_karyawan = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nama_karyawan = new javax.swing.JTextField();
        jabatan_karyawan = new javax.swing.JTextField();
        depart_karyawan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TabProyek = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        tambah_proyek = new javax.swing.JButton();
        edit_proyek = new javax.swing.JButton();
        hapus_proyek = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel_proyek = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        id_proyek = new javax.swing.JTextField();
        nama_proyek = new javax.swing.JTextField();
        durasi_kerja = new javax.swing.JTextField();
        TabTransaksi = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        tambah_transaksi = new javax.swing.JButton();
        edit_transaksi = new javax.swing.JButton();
        hapus_transaksi = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabel_transaksi = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        comboBox_karyawan = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        comboBox_proyek = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        peran_transaksi = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        id_transaksi = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TabbedPane.setBackground(new java.awt.Color(153, 153, 255));

        TabKaryawan.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(new java.awt.Color(153, 153, 255));

        tambah_karyawan.setText("Tambah");
        tambah_karyawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambah_karyawanActionPerformed(evt);
            }
        });
        jPanel6.add(tambah_karyawan);

        edit_karyawan.setText("Edit");
        edit_karyawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_karyawanActionPerformed(evt);
            }
        });
        jPanel6.add(edit_karyawan);

        hapus_karyawan.setText("Hapus");
        hapus_karyawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapus_karyawanActionPerformed(evt);
            }
        });
        jPanel6.add(hapus_karyawan);

        TabKaryawan.add(jPanel6, java.awt.BorderLayout.PAGE_END);

        jPanel7.setBackground(new java.awt.Color(204, 204, 255));
        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        tabel_karyawan.setBackground(new java.awt.Color(153, 153, 255));
        tabel_karyawan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nama", "Jabatan", "Departemen"
            }
        ));
        tabel_karyawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_karyawanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel_karyawan);

        jPanel7.add(jScrollPane1);

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setText("ID");

        jLabel3.setText("NAMA");

        jLabel4.setText("JABATAN");

        jLabel5.setText("DEPARTEMEN");

        jLabel6.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel6.setText("BIODATA  KARYAWAN");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(id_karyawan)
                            .addComponent(nama_karyawan)
                            .addComponent(jabatan_karyawan)
                            .addComponent(depart_karyawan, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel6)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_karyawan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nama_karyawan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jabatan_karyawan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(depart_karyawan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(59, 59, 59))
        );

        jPanel7.add(jPanel5);

        TabKaryawan.add(jPanel7, java.awt.BorderLayout.CENTER);

        TabbedPane.addTab("Karyawan", TabKaryawan);

        TabProyek.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        tambah_proyek.setText("Tambah");
        tambah_proyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambah_proyekActionPerformed(evt);
            }
        });
        jPanel2.add(tambah_proyek);

        edit_proyek.setText("Edit");
        edit_proyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_proyekActionPerformed(evt);
            }
        });
        jPanel2.add(edit_proyek);

        hapus_proyek.setText("Hapus");
        hapus_proyek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapus_proyekActionPerformed(evt);
            }
        });
        jPanel2.add(hapus_proyek);

        TabProyek.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        tabel_proyek.setBackground(new java.awt.Color(153, 153, 255));
        tabel_proyek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nama Proyek", "Durasi Pengerjaan"
            }
        ));
        tabel_proyek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_proyekMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabel_proyek);

        jPanel3.add(jScrollPane2);

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));

        jLabel7.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel7.setText("DATA PROYEK");

        jLabel8.setText("ID");

        jLabel9.setText("NAMA PROYEK");

        jLabel10.setText("DURASI KERJA");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(id_proyek, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(durasi_kerja, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nama_proyek, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(50, 50, 50)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(id_proyek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addComponent(nama_proyek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addComponent(durasi_kerja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel4);

        TabProyek.add(jPanel3, java.awt.BorderLayout.CENTER);

        TabbedPane.addTab("Proyek", TabProyek);

        TabTransaksi.setLayout(new java.awt.BorderLayout());

        jPanel8.setBackground(new java.awt.Color(153, 153, 255));

        tambah_transaksi.setText("Tambah");
        tambah_transaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambah_transaksiActionPerformed(evt);
            }
        });
        jPanel8.add(tambah_transaksi);

        edit_transaksi.setText("Edit");
        edit_transaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_transaksiActionPerformed(evt);
            }
        });
        jPanel8.add(edit_transaksi);

        hapus_transaksi.setText("Hapus");
        hapus_transaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapus_transaksiActionPerformed(evt);
            }
        });
        jPanel8.add(hapus_transaksi);

        TabTransaksi.add(jPanel8, java.awt.BorderLayout.PAGE_END);

        jPanel9.setLayout(new java.awt.GridLayout(1, 0));

        tabel_transaksi.setBackground(new java.awt.Color(153, 153, 255));
        tabel_transaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Transaksi", "ID Karyawan", "ID Proyek", "Peran"
            }
        ));
        tabel_transaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_transaksiMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabel_transaksi);

        jPanel9.add(jScrollPane3);

        jPanel10.setBackground(new java.awt.Color(204, 204, 255));

        jLabel11.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel11.setText("DATA TRANSAKSI PROYEK");

        jLabel12.setText("KARYAWAN");

        comboBox_karyawan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setText("PROYEK");

        comboBox_proyek.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel14.setText("PERAN");

        jLabel15.setText("ID TRANSAKSI");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(86, 86, 86))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addGap(39, 39, 39)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboBox_karyawan, 0, 151, Short.MAX_VALUE)
                    .addComponent(comboBox_proyek, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(peran_transaksi)
                    .addComponent(id_transaksi))
                .addGap(66, 66, 66))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel11)
                .addGap(36, 36, 36)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_transaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox_karyawan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox_proyek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(peran_transaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jPanel9.add(jPanel10);

        TabTransaksi.add(jPanel9, java.awt.BorderLayout.CENTER);

        TabbedPane.addTab("Transaksi Proyek", TabTransaksi);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Segoe Print", 0, 18)); // NOI18N
        jLabel1.setText("Aplikasi Manajemen Karyawan dan Proyek");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(197, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(148, 148, 148))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hapus_transaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapus_transaksiActionPerformed
        hapusTransaksi();
    }//GEN-LAST:event_hapus_transaksiActionPerformed

    private void tambah_transaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambah_transaksiActionPerformed
        tambahTransaksi();
    }//GEN-LAST:event_tambah_transaksiActionPerformed

    private void tambah_karyawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambah_karyawanActionPerformed
        tambahKaryawan();
    }//GEN-LAST:event_tambah_karyawanActionPerformed

    private void edit_karyawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_karyawanActionPerformed
        editKaryawan();
    }//GEN-LAST:event_edit_karyawanActionPerformed

    private void hapus_karyawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapus_karyawanActionPerformed
        hapusKaryawan();
    }//GEN-LAST:event_hapus_karyawanActionPerformed

    private void tambah_proyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambah_proyekActionPerformed
        // TODO add your handling code here:
        tambahProyek();
    }//GEN-LAST:event_tambah_proyekActionPerformed

    private void edit_proyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_proyekActionPerformed
        // TODO add your handling code here:
        editProyek();
    }//GEN-LAST:event_edit_proyekActionPerformed

    private void hapus_proyekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapus_proyekActionPerformed
        // TODO add your handling code here:
        hapusProyek();
    }//GEN-LAST:event_hapus_proyekActionPerformed

    private void edit_transaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_transaksiActionPerformed
        // TODO add your handling code here:
        editTransaksi();
    }//GEN-LAST:event_edit_transaksiActionPerformed

    private void tabel_karyawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_karyawanMouseClicked
        int row = tabel_karyawan.getSelectedRow();
        
        if (row != -1) {
            String idValue = tabel_karyawan.getValueAt(row, 0).toString();
            String namaValue = tabel_karyawan.getValueAt(row, 1).toString();
            String jabatanValue = tabel_karyawan.getValueAt(row, 2).toString();
            String departemenValue = tabel_karyawan.getValueAt(row, 3).toString();

            id_karyawan.setText(idValue);
            nama_karyawan.setText(namaValue);
            jabatan_karyawan.setText(jabatanValue);
            depart_karyawan.setText(departemenValue);
        }
    }//GEN-LAST:event_tabel_karyawanMouseClicked

    private void tabel_proyekMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_proyekMouseClicked
        int row = tabel_proyek.getSelectedRow();
        
        if (row != -1) { 
            String idValue = tabel_proyek.getValueAt(row, 0).toString();
            String namaProyekValue = tabel_proyek.getValueAt(row, 1).toString();
            String durasiPengerjaanValue = tabel_proyek.getValueAt(row, 2).toString();

            id_proyek.setText(idValue);
            nama_proyek.setText(namaProyekValue);
            durasi_kerja.setText(durasiPengerjaanValue);
        }
    }//GEN-LAST:event_tabel_proyekMouseClicked

    private void tabel_transaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_transaksiMouseClicked
        int row = tabel_transaksi.getSelectedRow();
        
        if (row != -1) { 
            String idTransaksiValue = tabel_transaksi.getValueAt(row, 0).toString();
            String namaKaryawanValue = tabel_transaksi.getValueAt(row, 1).toString();
            String namaProyekValue = tabel_transaksi.getValueAt(row, 2).toString();
            String peranValue = tabel_transaksi.getValueAt(row, 3).toString();

            id_transaksi.setText(idTransaksiValue);
            comboBox_karyawan.setSelectedItem(namaKaryawanValue);
            comboBox_proyek.setSelectedItem(namaProyekValue);
            peran_transaksi.setText(peranValue);
        }
    }//GEN-LAST:event_tabel_transaksiMouseClicked
    
    private void loadDataKaryawan() {
        String sql = "SELECT * FROM tb_karyawan";
        DefaultTableModel model = (DefaultTableModel) tabel_karyawan.getModel();
        model.setRowCount(0);

        try (Connection conn = koneksi.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql);
             ResultSet rs = pstmt.executeQuery()) {

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("id"),
                    rs.getString("nama"),
                    rs.getString("jabatan"),
                    rs.getString("departemen")
                };
                model.addRow(row);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data karyawan: " + e.getMessage());
        }
    }

    private void loadDataProyek() {
        String sql = "SELECT * FROM tb_proyek";
        DefaultTableModel model = (DefaultTableModel) tabel_proyek.getModel();
        model.setRowCount(0);

        try (Connection conn = koneksi.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql);
             ResultSet rs = pstmt.executeQuery()) {

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("id"),
                    rs.getString("nama_proyek"),
                    rs.getInt("durasi_pengerjaan")
                };
                model.addRow(row);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data proyek: " + e.getMessage());
        }
    }
    
    private void tambahKaryawan() {
    String idKaryawan = id_karyawan.getText();
    String namaKaryawan = nama_karyawan.getText();
    String jabatanKaryawan = jabatan_karyawan.getText();
    String departemenKaryawan = depart_karyawan.getText();

    String sql = "INSERT INTO tb_karyawan (id, nama, jabatan, departemen) VALUES (?, ?, ?, ?)";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, Integer.parseInt(idKaryawan));
        pstmt.setString(2, namaKaryawan);
        pstmt.setString(3, jabatanKaryawan);
        pstmt.setString(4, departemenKaryawan);

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Karyawan berhasil ditambahkan!");
        
        loadDataKaryawan();      // Muat ulang tabel karyawan
        loadKaryawanComboBox();  // Muat ulang ComboBox karyawan
        
        // Kosongkan text fields setelah data ditambahkan
        id_karyawan.setText("");
        nama_karyawan.setText("");
        jabatan_karyawan.setText("");
        depart_karyawan.setText("");

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menambahkan karyawan: " + e.getMessage());
    }
}    
    
    private void editKaryawan() {
        String idKaryawan = id_karyawan.getText();
        String namaKaryawan = nama_karyawan.getText();
        String jabatanKaryawan = jabatan_karyawan.getText();
        String departemenKaryawan = depart_karyawan.getText();

        String sql = "UPDATE tb_karyawan SET nama = ?, jabatan = ?, departemen = ? WHERE id = ?";

        try (Connection conn = koneksi.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, namaKaryawan);
            pstmt.setString(2, jabatanKaryawan);
            pstmt.setString(3, departemenKaryawan);
            pstmt.setInt(4, Integer.parseInt(idKaryawan));

            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Karyawan berhasil diupdate!");
            loadDataKaryawan();
            loadKaryawanComboBox();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal mengupdate karyawan: " + e.getMessage());
        }
    }
    
   private void hapusKaryawan() {
    String idKaryawan = id_karyawan.getText();

    // Cek apakah karyawan masih digunakan di tabel transaksi
    if (isKaryawanUsedInTransaksi(Integer.parseInt(idKaryawan))) {
        JOptionPane.showMessageDialog(this, "Data karyawan ini tidak bisa dihapus karena masih digunakan di transaksi.");
        return; // Hentikan proses jika karyawan masih digunakan
    }

    String sql = "DELETE FROM tb_karyawan WHERE id = ?";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, Integer.parseInt(idKaryawan));

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Karyawan berhasil dihapus!");
        loadDataKaryawan();
        loadKaryawanComboBox();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menghapus karyawan: " + e.getMessage());
    }
}

// Fungsi untuk memeriksa apakah karyawan digunakan di tabel transaksi
private boolean isKaryawanUsedInTransaksi(int idKaryawan) {
    String sql = "SELECT COUNT(*) FROM tb_transaksi WHERE id_karyawan = ?";
    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, idKaryawan);
        ResultSet rs = pstmt.executeQuery();
        if (rs.next()) {
            return rs.getInt(1) > 0; // Jika jumlah lebih dari 0, berarti masih digunakan
        }
    } catch (SQLException e) {
        System.out.println("Gagal memeriksa data karyawan: " + e.getMessage());
    }
    return false;
}

    
private void tambahProyek() {
    String idProyek = id_proyek.getText();
    String namaProyek = nama_proyek.getText();
    String durasiPengerjaan = durasi_kerja.getText();

    String sql = "INSERT INTO tb_proyek (id, nama_proyek, durasi_pengerjaan) VALUES (?, ?, ?)";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, Integer.parseInt(idProyek));
        pstmt.setString(2, namaProyek);
        pstmt.setInt(3, Integer.parseInt(durasiPengerjaan));

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Proyek berhasil ditambahkan!");
        
        loadDataProyek();       // Muat ulang tabel proyek
        loadProyekComboBox();   // Muat ulang ComboBox proyek
        
        // Kosongkan text fields setelah data ditambahkan
        id_proyek.setText("");
        nama_proyek.setText("");
        durasi_kerja.setText("");

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menambahkan proyek: " + e.getMessage());
    }
}

    private void editProyek() {
        String idProyek = id_proyek.getText();
        String namaProyek = nama_proyek.getText();
        String durasiPengerjaan = durasi_kerja.getText();

        String sql = "UPDATE tb_proyek SET nama_proyek = ?, durasi_pengerjaan = ? WHERE id = ?";

        try (Connection conn = koneksi.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, namaProyek);
            pstmt.setInt(2, Integer.parseInt(durasiPengerjaan));
            pstmt.setInt(3, Integer.parseInt(idProyek));

            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Proyek berhasil diupdate!");
            loadDataProyek();
            loadProyekComboBox();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal mengupdate proyek: " + e.getMessage());
        }
    }
    
  private void hapusProyek() {
    String idProyek = id_proyek.getText();

    // Cek apakah proyek masih digunakan di tabel transaksi
    if (isProyekUsedInTransaksi(Integer.parseInt(idProyek))) {
        JOptionPane.showMessageDialog(this, "Data proyek ini tidak bisa dihapus karena masih digunakan di transaksi.");
        return; // Hentikan proses jika proyek masih digunakan
    }

    String sql = "DELETE FROM tb_proyek WHERE id = ?";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, Integer.parseInt(idProyek));

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Proyek berhasil dihapus!");
        loadDataProyek();
        loadProyekComboBox();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menghapus proyek: " + e.getMessage());
    }
}

// Fungsi untuk memeriksa apakah proyek digunakan di tabel transaksi
private boolean isProyekUsedInTransaksi(int idProyek) {
    String sql = "SELECT COUNT(*) FROM tb_transaksi WHERE id_proyek = ?";
    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, idProyek);
        ResultSet rs = pstmt.executeQuery();
        if (rs.next()) {
            return rs.getInt(1) > 0; // Jika jumlah lebih dari 0, berarti masih digunakan
        }
    } catch (SQLException e) {
        System.out.println("Gagal memeriksa data proyek: " + e.getMessage());
    }
    return false;
}

    
    
private HashMap<String, Integer> karyawanMap = new HashMap<>();
private HashMap<String, Integer> proyekMap = new HashMap<>();

// Metode untuk memuat data karyawan ke dalam ComboBox
private void loadKaryawanComboBox() {
    String sql = "SELECT id, nama FROM tb_karyawan";
    comboBox_karyawan.removeAllItems();
    karyawanMap.clear();

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql);
         ResultSet rs = pstmt.executeQuery()) {

        while (rs.next()) {
            int id = rs.getInt("id");
            String nama = rs.getString("nama");
            karyawanMap.put(nama, id);  
            comboBox_karyawan.addItem(nama); 
        }

        // Perbarui ComboBox di tab transaksi (jika ada)
        if (comboBox_karyawan != null) {
            comboBox_karyawan.removeAllItems();
            for (String nama : karyawanMap.keySet()) {
                comboBox_karyawan.addItem(nama); // Tambahkan nama ke ComboBox di tab transaksi
            }
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal memuat data karyawan ke ComboBox: " + e.getMessage());
    }
}


private void loadProyekComboBox() {
    String sql = "SELECT id, nama_proyek FROM tb_proyek";
    comboBox_proyek.removeAllItems();
    proyekMap.clear();

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql);
         ResultSet rs = pstmt.executeQuery()) {

        while (rs.next()) {
            int id = rs.getInt("id");
            String namaProyek = rs.getString("nama_proyek");
            proyekMap.put(namaProyek, id);  
            comboBox_proyek.addItem(namaProyek); 
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal memuat data proyek ke ComboBox: " + e.getMessage());
    }
}

private void tambahTransaksi() {
    String idTransaksi = id_transaksi.getText();
    String selectedKaryawan = comboBox_karyawan.getSelectedItem() != null ? comboBox_karyawan.getSelectedItem().toString() : null;
    String selectedProyek = comboBox_proyek.getSelectedItem() != null ? comboBox_proyek.getSelectedItem().toString() : null;
    String peran = peran_transaksi.getText();

    Integer idKaryawan = selectedKaryawan != null ? karyawanMap.get(selectedKaryawan) : null;
    Integer idProyek = selectedProyek != null ? proyekMap.get(selectedProyek) : null;

    if (idKaryawan == null || idProyek == null) {
        JOptionPane.showMessageDialog(this, "Pilih karyawan dan proyek yang valid!");
        return;
    }

    String sql = "INSERT INTO tb_transaksi (id_transaksi, id_karyawan, id_proyek, peran) VALUES (?, ?, ?, ?)";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, Integer.parseInt(idTransaksi));
        pstmt.setInt(2, idKaryawan);    
        pstmt.setInt(3, idProyek);      
        pstmt.setString(4, peran);

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Transaksi berhasil ditambahkan!");
        loadDataTransaksi();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menambahkan transaksi: " + e.getMessage());
    }
}

private void loadDataTransaksi() {
    String sql = "SELECT t.id_transaksi, k.nama AS nama_karyawan, p.nama_proyek, t.peran " +
                 "FROM tb_transaksi t " +
                 "JOIN tb_karyawan k ON t.id_karyawan = k.id " +
                 "JOIN tb_proyek p ON t.id_proyek = p.id";
                 
    DefaultTableModel model = (DefaultTableModel) tabel_transaksi.getModel();
    model.setRowCount(0); 

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql);
         ResultSet rs = pstmt.executeQuery()) {
        while (rs.next()) {
            Object[] row = {
                rs.getInt("id_transaksi"),           
                rs.getString("nama_karyawan"),       
                rs.getString("nama_proyek"),         
                rs.getString("peran")                
            };
            model.addRow(row); 
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal memuat data transaksi: " + e.getMessage());
    }
}

private void editTransaksi() {
    String idTransaksi = id_transaksi.getText();
    String selectedKaryawan = comboBox_karyawan.getSelectedItem() != null ? comboBox_karyawan.getSelectedItem().toString() : null;
    String selectedProyek = comboBox_proyek.getSelectedItem() != null ? comboBox_proyek.getSelectedItem().toString() : null;
    String peran = peran_transaksi.getText();

    Integer idKaryawan = selectedKaryawan != null ? karyawanMap.get(selectedKaryawan) : null;
    Integer idProyek = selectedProyek != null ? proyekMap.get(selectedProyek) : null;

    if (idKaryawan == null || idProyek == null) {
        JOptionPane.showMessageDialog(this, "Pilih karyawan dan proyek yang valid!");
        return;
    }

    String sql = "UPDATE tb_transaksi SET id_karyawan = ?, id_proyek = ?, peran = ? WHERE id_transaksi = ?";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, idKaryawan);
        pstmt.setInt(2, idProyek);
        pstmt.setString(3, peran);
        pstmt.setInt(4, Integer.parseInt(idTransaksi));

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Transaksi berhasil diupdate!");
        loadDataTransaksi();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal mengupdate transaksi: " + e.getMessage());
    }
}

private void hapusTransaksi() {
    String idTransaksi = id_transaksi.getText();

    String sql = "DELETE FROM tb_transaksi WHERE id_transaksi = ?";

    try (Connection conn = koneksi.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setInt(1, Integer.parseInt(idTransaksi));

        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Transaksi berhasil dihapus!");
        loadDataTransaksi();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menghapus transaksi: " + e.getMessage());
    }
}    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(aplikasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(aplikasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(aplikasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(aplikasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new aplikasi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel TabKaryawan;
    private javax.swing.JPanel TabProyek;
    private javax.swing.JPanel TabTransaksi;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JComboBox<String> comboBox_karyawan;
    private javax.swing.JComboBox<String> comboBox_proyek;
    private javax.swing.JTextField depart_karyawan;
    private javax.swing.JTextField durasi_kerja;
    private javax.swing.JButton edit_karyawan;
    private javax.swing.JButton edit_proyek;
    private javax.swing.JButton edit_transaksi;
    private javax.swing.JButton hapus_karyawan;
    private javax.swing.JButton hapus_proyek;
    private javax.swing.JButton hapus_transaksi;
    private javax.swing.JTextField id_karyawan;
    private javax.swing.JTextField id_proyek;
    private javax.swing.JTextField id_transaksi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jabatan_karyawan;
    private javax.swing.JTextField nama_karyawan;
    private javax.swing.JTextField nama_proyek;
    private javax.swing.JTextField peran_transaksi;
    private javax.swing.JTable tabel_karyawan;
    private javax.swing.JTable tabel_proyek;
    private javax.swing.JTable tabel_transaksi;
    private javax.swing.JButton tambah_karyawan;
    private javax.swing.JButton tambah_proyek;
    private javax.swing.JButton tambah_transaksi;
    // End of variables declaration//GEN-END:variables
}
